// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { PostAccountRegisterData, PostAccountRegisterError, PostAccountRegisterResponse, GetConnectAuthorizeError, GetConnectAuthorizeResponse, PostConnectAuthorizeError, PostConnectAuthorizeResponse, PostConnectTokenError, PostConnectTokenResponse } from './types.gen';

export const client = createClient(createConfig());

export const postAccountRegister = <ThrowOnError extends boolean = false>(options?: Options<PostAccountRegisterData, ThrowOnError>) => { return (options?.client ?? client).post<PostAccountRegisterResponse, PostAccountRegisterError, ThrowOnError>({
    ...options,
    url: '/account/register'
}); };

export const getConnectAuthorize = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetConnectAuthorizeResponse, GetConnectAuthorizeError, ThrowOnError>({
    ...options,
    url: '/connect/authorize'
}); };

export const postConnectAuthorize = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<PostConnectAuthorizeResponse, PostConnectAuthorizeError, ThrowOnError>({
    ...options,
    url: '/connect/authorize'
}); };

export const postConnectToken = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).post<PostConnectTokenResponse, PostConnectTokenError, ThrowOnError>({
    ...options,
    url: '/connect/token'
}); };